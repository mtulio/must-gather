#!/bin/bash

#Safeguards
set -o nounset
set -o errexit
set -o pipefail

BASE_COLLECTION_PATH="../must-gather"
MONITORING_PATH="${BASE_COLLECTION_PATH}/monitoring"

mkdir -p "${MONITORING_PATH}"

MONITORING_ROUTE="$(oc get routes -n openshift-monitoring prometheus-k8s -o jsonpath={.status.ingress[0].host})"
SA_TOKEN="$(oc sa get-token default)"

# this is a CA bundle we need to verify the monitoring route, we will write it to disk so we can use it in the flag
oc -n openshift-config-managed get cm default-ingress-cert -o jsonpath='{.data.ca-bundle\.crt}' > "${MONITORING_PATH}/ca-bundle.crt"

# using oc get --raw because we directly control it and have standardized debugging on it
oc get\
  --server="https://${MONITORING_ROUTE}"\
  --token="${SA_TOKEN}" \
  --certificate-authority="${MONITORING_PATH}/ca-bundle.crt" \
  --raw=/api/v1/rules?type=alert \
  2>"${MONITORING_PATH}/alert.stderr" \
  > "${MONITORING_PATH}/alerts.json" || true

rm "${MONITORING_PATH}/ca-bundle.crt"

function get_top_nodes {
    oc adm top node &> "${MONITORING_PATH}/adm-top-nodes.out"
}

function get_top_pods {
    oc adm top pod -A &> "${MONITORING_PATH}/adm-top-pods.out"
}

function get_top_images {
    oc adm top images &> "${MONITORING_PATH}/adm-top-images.out"
}

function get_top_is {
    oc adm top imagestreams &> "${MONITORING_PATH}/adm-top-imagestreams.out"
}

function get_top {
    
    echo "INFO: Collecting 'oc adm top node'"
    get_top_nodes || true

    echo "INFO: Collecting 'oc adm top pod'"
    get_top_pods || true

    echo "INFO: Collecting 'oc adm top images'"
    get_top_images || true

    echo "INFO: Collecting 'oc adm top imagestreams'"
    get_top_is || true
}

get_top

# force disk flush to ensure that all data gathered is accessible in the copy container
sync
